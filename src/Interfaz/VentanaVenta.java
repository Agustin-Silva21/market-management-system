
package Interfaz;

import Dominio.*;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.*;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Component;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

public class VentanaVenta extends javax.swing.JFrame {

    public VentanaVenta(Mercado unMercado) {
        mercado = unMercado;
        initComponents();
        this.setSize(1000,1000);
        productosAComprar = new HashMap<>();
        cantidadYPrecioParaMostrar = new ArrayList<>();
        lstPuestos.setListData(mercado.getListaPuestos().toArray());
        
    }
    
    

    public class MyTableModel extends DefaultTableModel {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }

    }
    
    
    

    public class ImageRenderer extends DefaultTableCellRenderer{

      private JLabel lb = new JLabel();
      //imagen que se muestra cuando la celda esta vacia
      private ImageIcon icon = new ImageIcon( getClass().getResource("/com/bolivia/res/default.jpg") );
        //para contener las imagenes que se vayan cargando 
      private Map iconos = new HashMap() ;

      @Override
      public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, 
                                                     boolean hasFocus, int row, int column)
      {
            lb.setText((String) value);
            File fichero;
            //
            if( value !=null )
            {
                fichero = new File( value.toString() );
                //comprueba que fichero exista
                if( fichero.exists() )
                {
                    //busca la imagen en el MAP
                    if( ya_existe( value.toString() ) )
                    {
                        //si ya existe, extrae la imagen del MAP
                        lb.setIcon( getIcono( value.toString() ) );
                    }
                    else //No existe
                    {
                    //Agrega la imagen al map
                    iconos.put(value.toString(), bToIcon(fichero) );
                    //extrae y muestra
                    lb.setIcon( getIcono( value.toString() ) );    
                    }

                }
                else //si no existe, muestra imagen por default
                {
                    lb.setIcon(icon);
                }        
            }
            else
            {
                lb.setIcon(icon);
            }
        return lb;
      }

     /**
     * Comprueba que una imagen ya exista en memoria
     * @param String key identificador 
     */
     private boolean ya_existe( String key )
     {
        Iterator it = iconos.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry e = (Map.Entry)it.next();        
            if( e.getKey().equals(key) )
                return true;
        }
        return false;
     }

     /**
     * Extrae una imagen del MAP dado su KEY
     * @param String key identificador unico
     * @return ImageIcon
     */
     private ImageIcon getIcono( String key )
     {
        ImageIcon imageIcon = icon;
        Iterator it = iconos.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry e = (Map.Entry)it.next();        
            if( e.getKey().equals(key) )
            {
               imageIcon = (ImageIcon) e.getValue();
               break;
            }            
        }
        return imageIcon;
     }

     /**
     * Dado la ruta de un archivo de imagen, carga este en un ImageIcon y retorna
     * @param File fichero
     */
    private ImageIcon bToIcon( File fichero )
    {        
        ImageIcon imageIcon = new ImageIcon( fichero.getAbsolutePath() );
        return imageIcon;
    }

    }//--> fin clase
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPuestos = new javax.swing.JList();
        lblCompra = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstProductosAComprar = new javax.swing.JList();
        btnComprar = new javax.swing.JButton();
        btnAgregarProducto = new javax.swing.JButton();
        btnQuitarProducto = new javax.swing.JButton();
        lblPuestos = new javax.swing.JLabel();
        lvlProductos = new javax.swing.JLabel();
        lblProductosSeleccionados = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstProductosAComprarDatos = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        lstPuestos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstPuestos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstPuestosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstPuestos);

        lblCompra.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblCompra.setText("Registro de Compras");

        lstProductosAComprar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProductosAComprar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstProductosAComprarValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lstProductosAComprar);

        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        btnAgregarProducto.setText("->");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        btnQuitarProducto.setText("<-");
        btnQuitarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarProductoActionPerformed(evt);
            }
        });

        lblPuestos.setText("Puestos");

        lvlProductos.setText("Productos");

        lblProductosSeleccionados.setText("A Comprar");

        lstProductosAComprarDatos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstProductosAComprarDatos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstProductosAComprarDatosValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(lstProductosAComprarDatos);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(lblCompra))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(470, 470, 470)
                                .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(145, 145, 145)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnQuitarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblPuestos, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lvlProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(165, 165, 165)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProductosSeleccionados, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPuestos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductosSeleccionados, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(btnAgregarProducto)
                                        .addGap(39, 39, 39)
                                        .addComponent(btnQuitarProducto)))
                                .addGap(8, 8, 8)
                                .addComponent(lvlProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(48, 48, 48)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(566, 566, 566))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 850, 590);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        
    }//GEN-LAST:event_btnComprarActionPerformed

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void lstProductosAComprarValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstProductosAComprarValueChanged
        
        
    }//GEN-LAST:event_lstProductosAComprarValueChanged

    private void lstProductosAComprarDatosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstProductosAComprarDatosValueChanged
        
        
    }//GEN-LAST:event_lstProductosAComprarDatosValueChanged

    private void btnQuitarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarProductoActionPerformed
        
    }//GEN-LAST:event_btnQuitarProductoActionPerformed

    private void lstPuestosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstPuestosValueChanged
        Puesto seleccionLista = (Puesto)lstPuestos.getSelectedValue();
        int posicion = mercado.getListaPuestos().indexOf(seleccionLista);
        Producto[] productosOfrecidos = mercado.getListaPuestos().get(posicion).getOferta().keySet().toArray(new Producto[0]);
        
        JLabel[] listaIconos = new JLabel[productosOfrecidos.length];
        for (int i = 0; i < productosOfrecidos.length; i ++){
            BufferedImage productoSeleccionado = productosOfrecidos[i].getImagen();
            File tempFile = new File("temp.jpg"); // Create a temporary file
            try {
                ImageIO.write(productoSeleccionado, "jpg", tempFile); // Write the BufferedImage to the temporary file
                ImageIcon imagenIcon = new ImageIcon(tempFile.getPath());
                Image imagen = imagenIcon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
                JLabel labelImagen = new JLabel(new ImageIcon(imagen));
                listaIconos[i] = labelImagen;
            } catch (IOException e) {
                 System.out.println("fail");
            } finally {
                tempFile.delete(); // Delete the temporary file
            }
        }
        //jLabel1 =new JLabel(listaIconos[0]);
        
        
        this.lstProductosOfrecidos.setListData(listaIconos);
    }//GEN-LAST:event_lstPuestosValueChanged

    private void reCargar(){
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnQuitarProducto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCompra;
    private javax.swing.JLabel lblProductosSeleccionados;
    private javax.swing.JLabel lblPuestos;
    private javax.swing.JList lstProductosAComprar;
    private javax.swing.JList lstProductosAComprarDatos;
    private javax.swing.JList lstPuestos;
    private javax.swing.JLabel lvlProductos;
    // End of variables declaration//GEN-END:variables
    private Mercado mercado;
    private HashMap<Producto, float[]> productosAComprar;
    private ArrayList<String> cantidadYPrecioParaMostrar;
    
}
